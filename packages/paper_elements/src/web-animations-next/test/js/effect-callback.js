suite("effect-callback",function(){setup(function(){document.timeline._players=[],webAnimationsMinifill.timeline._players=[]}),test("animations starting in the future are not in effect",function(){var t=[];tick(100);var e=document.body.animate(function(e){t.push(e)},1e3);e.startTime=1e3,tick(200),tick(1e3),tick(1100),assert.deepEqual(t,[null,0,.1])}),test("duration 0 players get sampled at least once",function(){var t;tick(0);document.body.animate(function(e){t=e},{duration:0,fill:"both"});tick(100),assert.equal(t,1),assert.equal(isTicking(),!1)}),test("players added during custom effect callbacks get updated in the same tick",function(){var t,e=!1;tick(0),document.body.animate(function(){t=document.body.animate(function(){e=!0},1)},2),tick(1),assert.isTrue(t.startTime>=0),assert.isFalse(e)}),test("custom effect should be called after cancel",function(){var t=[],e=document.body.animate(function(e){t.push(e)},1e3);tick(0),tick(500),e.cancel(),tick(501),assert.deepEqual(t,[0,.5,null])}),test("element.animate is given animation",function(){{var t;document.body.animate(function(e,n,i){t=i},100)}tick(50),tick(150),assert.equal(isTicking(),!1),assert(t,"callback should be set"),assert.equal(t.target,document.body)}),test("effect callback on animation is given source animation",function(){var t,e=new Animation(document.body,function(e,n,i){t=i},1e3),n=document.timeline.play(e);tick(50),tick(550),assert.equal(n.currentTime,500),assert.equal(t,e)})});