suite("player",function(){setup(function(){webAnimationsMinifill.timeline._players=[]}),test("zero duration animation works",function(){tick(90);var e=document.body.animate([],0);tick(100),assert.equal(e.startTime,100),assert.equal(e.currentTime,0)}),test("playing works as expected",function(){tick(90);var e=document.body.animate([],2e3);tick(100),assert.equal(e.startTime,100),assert.equal(e.currentTime,0),tick(300),assert.equal(e.startTime,100),assert.equal(e.currentTime,200)}),test("pause at start of play",function(){tick(90);var e=document.body.animate([],2e3);e.pause(),tick(100),assert.equal(e.currentTime,0),tick(300),e.play(),assert.equal(e.currentTime,0),tick(310),assert.equal(e.currentTime,0),assert.equal(e.startTime,310);var e=document.body.animate([],2e3);e.startTime=-690,e.pause(),assert.equal(e.currentTime,null),tick(700),e.play(),tick(701),assert.equal(e.currentTime,1e3),tick(800),assert.equal(e.currentTime,1099),assert.equal(e.startTime,-299)}),test("pausing works as expected",function(){tick(190);var e=document.body.animate([],3e3);tick(200),tick(1500),assert.equal(e.startTime,200),assert.equal(e.currentTime,1300),e.pause(),assert.equal(e.startTime,null),assert.equal(e.currentTime,null),tick(2500),assert.equal(e.startTime,null),assert.equal(e.currentTime,1300),e.play(),tick(2510),assert.equal(e.startTime,1210),assert.equal(e.currentTime,1300),tick(3500),assert.equal(e.startTime,1210),assert.equal(e.currentTime,2290)}),test("reversing works as expected",function(){tick(290);var e=document.body.animate([],1e3);tick(300),assert.equal(e.startTime,300),assert.equal(e.currentTime,0),tick(600),assert.equal(e.startTime,300),assert.equal(e.currentTime,300),assert.equal(e.playbackRate,1),e.reverse(),tick(600),assert.equal(e.startTime,900),assert.equal(e.currentTime,300),assert.equal(e.playbackRate,-1),tick(700),assert.equal(e.startTime,900),assert.equal(e.currentTime,200)}),test("reversing after pausing",function(){tick(90);var e=document.body.animate([],1e3);tick(100),tick(600),e.reverse(),tick(601),tick(700),assert.equal(e.startTime,1101),assert.equal(e.currentTime,401)}),test("reversing after finishing works as expected",function(){tick(90);var e=document.body.animate([],1e3);tick(100),tick(1200),assert.equal(e.finished,!0),assert.equal(e.startTime,100),assert.equal(e.currentTime,1e3),tick(1500),assert.equal(e.currentTime,1e3),assert.equal(isTicking(),!1),e.reverse(),assert.equal(e._startTime,null),assert.equal(e.currentTime,1e3),tick(1600),assert.equal(e.startTime,2600),assert.equal(e.currentTime,1e3)}),test("playing after finishing works as expected",function(){tick(90);var e=document.body.animate([],1e3);tick(100),tick(1200),assert.equal(e.finished,!0),assert.equal(e.startTime,100),assert.equal(e.currentTime,1e3),tick(1500),assert.equal(e.currentTime,1e3),assert.equal(isTicking(),!1),e.play(),assert.equal(e.startTime,null),assert.equal(e.currentTime,0),tick(1600),assert.equal(e.startTime,1600),assert.equal(e.currentTime,0)}),test("limiting works as expected",function(){tick(390);var e=document.body.animate([],1e3);tick(400),assert.equal(e.startTime,400),assert.equal(e.currentTime,0),tick(900),assert.equal(e.startTime,400),assert.equal(e.currentTime,500),tick(1400),assert.equal(e.startTime,400),assert.equal(e.currentTime,1e3),tick(1500),assert.equal(e.startTime,400),assert.equal(e.currentTime,1e3),e.reverse(),assert.equal(e.playbackRate,-1),assert.equal(e.currentTime,1e3),assert.equal(e._startTime,null),tick(2e3),assert.equal(e.currentTime,1e3),assert.equal(e.startTime,3e3),tick(2200),assert.equal(e.currentTime,800),assert.equal(e.startTime,3e3),tick(3200),assert.equal(e.currentTime,0),assert.equal(e.startTime,3e3),tick(3500),assert.equal(e.currentTime,0),assert.equal(e.startTime,3e3)}),test("play after limit works as expected",function(){tick(490);var e=document.body.animate([],2e3);tick(500),tick(2600),assert.equal(e.currentTime,2e3),assert.equal(e.startTime,500),assert.equal(e.finished,!0),assert.equal(e.playbackRate,1),setTicking(!0),e.play(),tick(2700),assert.equal(e.startTime,2700),assert.equal(e.currentTime,0),assert.equal(e.finished,!1),assert.equal(e.playbackRate,1)}),test("play after limit works as expected (reversed)",function(){tick(590);var e=document.body.animate([],3e3);tick(600),tick(700),e.reverse(),tick(701),tick(900),assert.equal(e.startTime,801),assert.equal(e.currentTime,0),assert.equal(e.finished,!0),assert.equal(e.playbackRate,-1),setTicking(!0),e.play(),tick(1e3),assert.equal(e.startTime,4e3),assert.equal(e.currentTime,3e3),assert.equal(e.finished,!1),assert.equal(e.playbackRate,-1)}),test("seeking works as expected",function(){tick(690);var e=document.body.animate([],2e3);tick(700),tick(900),assert.equal(e.currentTime,200),e.currentTime=600,assert.equal(e.currentTime,600),assert.equal(e.startTime,300),e.reverse(),tick(1e3),assert.equal(e.startTime,1600),e.currentTime=300,assert.equal(e.currentTime,300),assert.equal(e.startTime,1300)}),test("seeking while paused works as expected",function(){tick(790);var e=document.body.animate([],1e3);tick(800),tick(1e3),e.pause(),assert.equal(e.currentTime,null),assert.equal(e.startTime,null),assert.equal(e.paused,!0),e.currentTime=500,assert.equal(e.startTime,null),assert.equal(e.paused,!0)}),test("setting start time while paused is ignored",function(){tick(900);var e=document.body.animate([],1234);e.pause(),assert.equal(e.startTime,null),assert.equal(e.currentTime,null),e.startTime=2232,assert.equal(e.startTime,null),assert.equal(e.currentTime,null)}),test("finishing works as expected",function(){tick(1e3);var e=document.body.animate([],2e3);e.finish(),assert.equal(e.startTime,0),assert.equal(e.currentTime,2e3),e.reverse(),e.finish(),assert.equal(e.currentTime,0),assert.equal(e.startTime,2e3),tick(2e3)}),test("cancelling clears all effects",function(){tick(0);var e=document.createElement("div");document.documentElement.appendChild(e);var t=e.animate([{marginLeft:"50px"},{marginLeft:"50px"}],1e3);tick(10),tick(110),assert.equal(getComputedStyle(e).marginLeft,"50px"),t.cancel(),assert.equal(getComputedStyle(e).marginLeft,"0px"),assert.deepEqual(webAnimationsMinifill.timeline._players,[]),tick(120),assert.equal(getComputedStyle(e).marginLeft,"0px"),assert.deepEqual(webAnimationsMinifill.timeline._players,[]),document.documentElement.removeChild(e)}),test("startTime is set on first tick if timeline hasn't started",function(){webAnimationsMinifill.timeline.currentTime=void 0;var e=document.body.animate([],1e3);tick(0),tick(100),assert.equal(e.startTime,0)}),test("players which are finished and not filling get discarded",function(){tick(90);var e=document.body.animate([],100),t=document.body.animate([],{duration:100,fill:"forwards"});assert.deepEqual(webAnimationsMinifill.timeline._players,[e._player||e,t._player||t]),tick(100),assert.deepEqual(webAnimationsMinifill.timeline._players,[e._player||e,t._player||t]),tick(400),assert.deepEqual(webAnimationsMinifill.timeline._players,[t._player||t])}),test("discarded players get re-added on modification",function(){tick(90);var e=document.body.animate([],100);tick(100),tick(400),assert.deepEqual(webAnimationsMinifill.timeline._players,[]),e.currentTime=0,assert.deepEqual(webAnimationsMinifill.timeline._players,[e._player||e])}),test("players in the before phase are not discarded",function(){tick(100);var e=document.body.animate([],100);e.currentTime=-50,tick(110),assert.deepEqual(webAnimationsMinifill.timeline._players,[e._player||e])}),test("players that go out of effect should not clear the effect of players that are in effect",function(){var e=document.createElement("div");document.body.appendChild(e),tick(0);e.animate([{marginLeft:"200px"},{marginLeft:"200px"}],200),e.animate([{marginLeft:"100px"},{marginLeft:"100px"}],100);tick(50),assert.equal(getComputedStyle(e).marginLeft,"100px","t = 50"),tick(150),assert.equal(getComputedStyle(e).marginLeft,"200px","t = 150"),tick(250),assert.equal(getComputedStyle(e).marginLeft,"0px","t = 250"),document.body.removeChild(e)}),test("player modifications should update CSS effects immediately",function(){var e=document.createElement("div");document.body.appendChild(e),tick(0);var t=(e.animate([{width:"1234px"},{width:"1234px"}],{duration:1,fill:"both"}),e.animate([{width:"0px"},{width:"100px"}],100));assert.equal(getComputedStyle(e).width,"0px"),t.currentTime=50,assert.equal(getComputedStyle(e).width,"50px"),t.currentTime=100,assert.equal(getComputedStyle(e).width,"1234px"),t.play(),assert.equal(getComputedStyle(e).width,"0px"),t.startTime=-50,assert.equal(getComputedStyle(e).width,"50px"),document.body.removeChild(e)}),test("Player that hasn't been played has playState 'idle'",function(){var e=new minifillAnimation(document.body,[],1e3),t=new Player(e);assert.equal(t.playState,"idle")}),test("playState works for a simple animation",function(){var e=document.body.animate([],1e3);tick(0),assert.equal(e.playState,"running"),tick(100),assert.equal(e.playState,"running"),e.pause(),assert.equal(e.playState,"pending"),tick(101),assert.equal(e.playState,"paused"),e.play(),assert.equal(e.playState,"pending"),tick(102),assert.equal(e.playState,"running"),tick(1002),assert.equal(e.playState,"finished")}),test("Play after cancel",function(){var e=document.body.animate([],1e3);assert.equal(e.playState,"pending"),tick(0),e.cancel(),assert.equal(e.playState,"idle"),assert.equal(e.currentTime,null),assert.equal(e.startTime,null),tick(1),assert.equal(e.playState,"idle"),assert.equal(e.currentTime,null),assert.equal(e.startTime,null),e.play(),assert.equal(e.playState,"pending"),assert.equal(e.currentTime,0),assert.equal(e.startTime,null),tick(10),assert.equal(e.playState,"running"),assert.equal(e.currentTime,0),assert.equal(e.startTime,10)}),test("Reverse after cancel",function(){var e=document.body.animate([],300);tick(0),e.cancel(),assert.equal(e.playState,"idle"),assert.equal(e.currentTime,null),assert.equal(e.startTime,null),tick(1),e.reverse(),assert.equal(e.playState,"pending"),assert.equal(e.currentTime,300),assert.equal(e.startTime,null),tick(100),assert.equal(e.playState,"running"),assert.equal(e.currentTime,300),assert.equal(e.startTime,400),tick(300),assert.equal(e.playState,"running"),assert.equal(e.currentTime,100),assert.equal(e.startTime,400),tick(400),assert.equal(e.playState,"finished"),assert.equal(e.currentTime,0),assert.equal(e.startTime,400)}),test("Finish after cancel",function(){var e=document.body.animate([],300);tick(0),e.cancel(),assert.equal(e.playState,"idle"),assert.equal(e.currentTime,null),assert.equal(e.startTime,null),tick(1),e.finish(),assert.equal(e.playState,"idle"),assert.equal(e.currentTime,null),assert.equal(e.startTime,null),tick(2),assert.equal(e.playState,"idle"),assert.equal(e.currentTime,null),assert.equal(e.startTime,null)}),test("Pause after cancel",function(){var e=document.body.animate([],300);tick(0),e.cancel(),assert.equal(e.playState,"idle"),assert.equal(e.currentTime,null),assert.equal(e.startTime,null),tick(1),e.pause(),assert.equal(e.playState,"idle"),assert.equal(e.currentTime,null),assert.equal(e.startTime,null)}),test("Players ignore NaN times",function(){var e=document.body.animate([],300);e.startTime=100,tick(110),assert.equal(e.currentTime,10),e.startTime=0/0,assert.equal(e.startTime,100),e.currentTime=void 0,assert.equal(e.currentTime,10)}),test("play() should not set a start time",function(){var e=document.body.animate([],1e3);e.cancel(),assert.equal(e.startTime,null),assert.equal(e.playState,"idle"),e.play(),assert.equal(e.startTime,null),assert.equal(e.playState,"pending")}),test("reverse() should not set a start time",function(){var e=document.body.animate([],1e3);e.cancel(),assert.equal(e.startTime,null),assert.equal(e.playState,"idle"),e.reverse(),assert.equal(e.startTime,null),assert.equal(e.playState,"pending")})});